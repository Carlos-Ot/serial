ext.deps = [:]
def versions = [:]

versions.android_gradle_plugin = '3.6.1'

// Kotlin
versions.kotlin = '1.3.72'
versions.coroutines = '1.3.3'

// Android KTX
versions.core_ktx = '1.2.0'
versions.fragment_ktx = '1.2.4'
versions.palette_ktx = '1.0.0'
versions.sqlite_ktx = '2.1.0'

// Android Jetpack
versions.lifecycle = '2.2.0'
versions.arch_core = '2.1.0'
versions.room = '2.2.5'

// Android UI
versions.appcompat = '1.1.0'
versions.annotation = '1.1.0'
versions.constraintlayout = '1.1.3'
versions.cardview = '1.0.0'
versions.recyclerview = '1.1.0'
versions.palette = '1.0.0'
versions.material = '1.2.0-beta01'

// Retrofit
versions.retrofit = '2.9.0'
versions.moshi = '1.9.2'
versions.okhttp3 = '4.7.2'
versions.coroutine_adapter = '0.9.2'

// Tools
versions.timber = '4.7.1'
versions.stetho = '1.5.1'
versions.leak_canary = '2.2'

// Testing
versions.hamkrest = '1.7.0.0'
versions.junit = '4.13'
versions.mockk = '1.10.0'
versions.android_test_core = '1.2.0'
versions.android_test_junit = '1.1.1'
versions.android_test_truth = '0.42'
versions.android_test_espresso = '3.1.0'

def deps = [:]

def network = [
        "com.squareup.retrofit2:retrofit:$versions.retrofit",
        "com.squareup.okhttp3:okhttp:$versions.okhttp3",
        "com.squareup.moshi:moshi-kotlin:$versions.moshi",
        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.coroutine_adapter"
]
deps.network = network

def coroutines = [
        "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
        "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
]
deps.coroutines = coroutines


deps.kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

def database = [
        "androidx.room:room-runtime:$versions.room",
        "androidx.room:room-ktx:$versions.room",
        "androidx.room:room-testing:$versions.room",
        "androidx.sqlite:sqlite-ktx:$versions.sqlite_ktx"
]
deps.database = database
deps.room_compiler = "androidx.room:room-compiler:$versions.room"

def android_ui = [
        "androidx.appcompat:appcompat:$versions.appcompat",
        "androidx.constraintlayout:constraintlayout:$versions.constraintlayout",
        "androidx.recyclerview:recyclerview:$versions.recyclerview",
        "androidx.cardview:cardview:$versions.cardview",
        "com.google.android.material:material:$versions.material",
        "androidx.fragment:fragment-ktx:$versions.fragment_ktx",
        "androidx.palette:palette:$versions.palette",
        "androidx.palette:palette-ktx:$versions.palette_ktx"
]
deps.android_ui = android_ui

def androidx = [
        "androidx.core:core-ktx:$versions.core_ktx",
        "androidx.annotation:annotation:$versions.annotation"
]
deps.androidx = androidx

def lifecycle = [
        "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
        "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle",
        "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle",
        "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
]
deps.lifecycle = lifecycle

def arch_core = [
        "androidx.arch.core:core-runtime:$versions.arch_core",

]
deps.arch_core = arch_core

def stetho = [
        "com.facebook.stetho:stetho:$versions.stetho",
        "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
]
deps.stetho = stetho

def debug = [
        "com.jakewharton.timber:timber:$versions.timber",
        "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
]
deps.debug = debug

def testing = [
        "junit:junit:$versions.junit",
        "com.natpryce:hamkrest:$versions.hamkrest",
        "androidx.arch.core:core-testing:$versions.arch_core",
        "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin",
        "io.mockk:mockk:$versions.mockk"
]
deps.testing = testing

def android_testing = [
        "androidx.test:core:$versions.android_test_core",
        "androidx.test.ext:junit:$versions.android_test_junit",
        "androidx.test:runner:$versions.android_test_junit",
        "androidx.test:rules:$versions.android_test_junit",
        "com.google.truth:truth:$versions.android_test_truth",
        "androidx.test.espresso:espresso-core:$versions.android_test_espresso",
        "androidx.test.espresso.idling:idling-concurrent:$versions.android_test_espresso",
        "androidx.test.espresso:espresso-idling-resource:$versions.android_test_espresso"
]
deps.android_testing = android_testing

// Core
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.databinding = "androidx.databinding:databinding-compiler:$versions.android_gradle_plugin"


ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 26
build_versions.target_sdk = 29
build_versions.build_tools = '29.0.2'
ext.build_versions = build_versions

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    handler.maven { url "https://kotlin.bintray.com/kotlinx/" }
    handler.maven { url "https://maven.fabric.io/public" }
}

ext.addRepos = this.&addRepos

